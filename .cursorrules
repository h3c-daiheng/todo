# 前端开发规范
## HTML 规范
- 使用 HTML5 规范
- 必须包含完整的文档结构 (DOCTYPE, html, head, body)
- 标签必须正确闭合
- 使用语义化标签 (nav, header, footer, main, section 等)
- 图片必须包含 alt 属性

## JavaScript 规范
- 使用 ES6+ 语法标准
- 变量使用 const 和 let，避免使用 var
- 函数优先使用箭头函数
- 代码缩进使用 2 空格
- 每行代码结束必须加分号
- 使用驼峰命名法命名变量和函数
- 注释必须清晰明了，解释复杂逻辑

# 后端开发规范 (Python)
## 代码风格
- 遵循 PEP 8 规范
- 使用 4 空格缩进
- 行长度不超过 79 个字符
- 使用下划线命名法命名变量和函数
- 类名使用驼峰命名法

## 项目结构
- 使用虚拟环境管理依赖
- requirements.txt 文件必须及时更新
- 配置文件使用 .env 管理环境变量
- 所有 API 端点必须有文档说明

## 代码质量
- 必须编写单元测试
- 代码覆盖率不低于 80%
- 使用类型注解
- 必须处理异常情况
- 关键函数必须添加文档字符串

# 通用规范
- 使用 Git 进行版本控制
- 每个提交必须有清晰的提交信息
- 代码提交前必须进行代码审查
- 保持代码整洁，删除无用代码和注释
- 定期更新依赖包版本 

# 项目开发流程规范
## 需求阶段
- 必须进行需求评审会议
- 编写详细的需求文档和原型设计
- 制定项目里程碑和时间节点
- 明确功能优先级和验收标准

## 开发阶段
- 遵循 Git Flow 工作流
- 每日进行站会沟通项目进度
- 重要功能必须进行技术方案评审
- 按照 Sprint 周期进行迭代开发
- 新功能必须创建新分支进行开发

## 测试阶段
- 开发人员必须完成单元测试
- 提交测试前进行自测
- 编写测试用例文档
- 进行功能测试和集成测试
- 性能测试和安全测试必不可少

## 发布阶段
- 制定详细的发布计划
- 准备回滚方案
- 进行预发布环境测试
- 编写发布文档和更新日志
- 发布后进行监控和告警配置

## 维护阶段
- 建立问题跟踪机制
- 定期进行代码重构
- 及时修复线上问题
- 保持文档的及时更新
- 定期进行性能优化 